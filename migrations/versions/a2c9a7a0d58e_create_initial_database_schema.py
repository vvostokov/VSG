"""Create initial database schema

Revision ID: a2c9a7a0d58e
Revises: 
Create Date: 2025-07-30 00:43:03.999608

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a2c9a7a0d58e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('account_type', sa.String(length=64), nullable=False),
    sa.Column('currency', sa.String(length=16), nullable=False),
    sa.Column('balance', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'type', name='_name_type_uc')
    )
    op.create_table('debt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('debt_type', sa.String(length=50), nullable=False),
    sa.Column('counterparty', sa.String(length=128), nullable=False),
    sa.Column('initial_amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('repaid_amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=16), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historical_price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=32), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('price_usdt', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker', 'date', name='_ticker_date_uc')
    )
    with op.batch_alter_table('historical_price', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_historical_price_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_historical_price_ticker'), ['ticker'], unique=False)

    op.create_table('historical_price_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=32), nullable=False),
    sa.Column('period', sa.String(length=10), nullable=False),
    sa.Column('change_percent', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker', 'period', name='_ticker_period_uc')
    )
    with op.batch_alter_table('historical_price_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_historical_price_cache_period'), ['period'], unique=False)
        batch_op.create_index(batch_op.f('ix_historical_price_cache_ticker'), ['ticker'], unique=False)

    op.create_table('investment_platform',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('platform_type', sa.String(length=64), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('api_key', sa.String(length=256), nullable=True),
    sa.Column('api_secret_encrypted', sa.String(length=512), nullable=True),
    sa.Column('passphrase_encrypted', sa.String(length=512), nullable=True),
    sa.Column('other_credentials_json_encrypted', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('last_sync_status', sa.String(length=128), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('last_tx_synced_at', sa.DateTime(), nullable=True),
    sa.Column('manual_earn_balances_json', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('json_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sa.String(length=128), nullable=False),
    sa.Column('json_data', sa.Text(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('json_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_json_cache_cache_key'), ['cache_key'], unique=True)

    op.create_table('moex_historical_price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('isin', sa.String(length=32), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('price_rub', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('isin', 'date', name='_moex_isin_date_uc')
    )
    with op.batch_alter_table('moex_historical_price', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_moex_historical_price_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_moex_historical_price_isin'), ['isin'], unique=False)

    op.create_table('portfolio_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_value_rub', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('portfolio_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_portfolio_history_date'), ['date'], unique=True)

    op.create_table('securities_portfolio_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_value_rub', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('securities_portfolio_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_securities_portfolio_history_date'), ['date'], unique=True)

    op.create_table('banking_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('to_account_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('debt_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['debt_id'], ['debt.id'], ),
    sa.ForeignKeyConstraint(['to_account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investment_asset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('asset_type', sa.String(length=64), nullable=True),
    sa.Column('quantity', sa.Numeric(precision=36, scale=18), nullable=True),
    sa.Column('current_price', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('currency_of_price', sa.String(length=16), nullable=True),
    sa.Column('source_account_type', sa.String(length=100), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['platform_id'], ['investment_platform.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exchange_tx_id', sa.String(length=128), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('raw_type', sa.String(length=128), nullable=True),
    sa.Column('asset1_ticker', sa.String(length=32), nullable=True),
    sa.Column('asset1_amount', sa.Numeric(precision=36, scale=18), nullable=True),
    sa.Column('asset2_ticker', sa.String(length=32), nullable=True),
    sa.Column('asset2_amount', sa.Numeric(precision=36, scale=18), nullable=True),
    sa.Column('fee_amount', sa.Numeric(precision=36, scale=18), nullable=True),
    sa.Column('fee_currency', sa.String(length=32), nullable=True),
    sa.Column('execution_price', sa.Numeric(precision=36, scale=18), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['platform_id'], ['investment_platform.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exchange_tx_id')
    )
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transaction_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transaction_timestamp'))

    op.drop_table('transaction')
    op.drop_table('investment_asset')
    op.drop_table('banking_transaction')
    with op.batch_alter_table('securities_portfolio_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_securities_portfolio_history_date'))

    op.drop_table('securities_portfolio_history')
    with op.batch_alter_table('portfolio_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_portfolio_history_date'))

    op.drop_table('portfolio_history')
    with op.batch_alter_table('moex_historical_price', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_moex_historical_price_isin'))
        batch_op.drop_index(batch_op.f('ix_moex_historical_price_date'))

    op.drop_table('moex_historical_price')
    with op.batch_alter_table('json_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_json_cache_cache_key'))

    op.drop_table('json_cache')
    op.drop_table('investment_platform')
    with op.batch_alter_table('historical_price_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_historical_price_cache_ticker'))
        batch_op.drop_index(batch_op.f('ix_historical_price_cache_period'))

    op.drop_table('historical_price_cache')
    with op.batch_alter_table('historical_price', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_historical_price_ticker'))
        batch_op.drop_index(batch_op.f('ix_historical_price_date'))

    op.drop_table('historical_price')
    op.drop_table('debt')
    op.drop_table('category')
    op.drop_table('account')
    # ### end Alembic commands ###
